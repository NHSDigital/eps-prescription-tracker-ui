AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: |
  PFP API's and related resources

Parameters:
  StackName:
    Type: String
    Default: none
  StatusFunctionName:
    Type: String
    Default: none
  StatusFunctionArn:
    Type: String
    Default: none
  LogRetentionInDays:
    Type: Number
    Default: 30
  EnableSplunk:
    Type: String
    Default: 30
  UserPoolArn:
    Type: String

Resources:
  RestApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub ${StackName}-apigw
      EndpointConfiguration:
        Types:
          - REGIONAL

  Authorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: cognitoAuth
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.authorization
      ProviderARNs:
        - !Ref UserPoolArn
      RestApiId: !Ref RestApiGateway

  StatusStatementResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApiGateway
      ParentId: !GetAtt RestApiGateway.RootResourceId
      PathPart: _status

  StatusMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApiGateway
      ResourceId: !Ref StatusStatementResource
      # AuthorizationScopes - add this to use access token. Leave out to use identity token
      HttpMethod: GET
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref Authorizer
      Integration:
        Type: AWS_PROXY
        Credentials: !GetAtt RestApiGatewayResources.Outputs.ApiGwRoleArn
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StatusFunctionArn}/invocations

  # *********************************************************************
  # If you add a new endpoint, then you need to change the name of this resource
  # You also need to change it in RestApiGatewayStage.Properties.DeploymentId
  # *********************************************************************
  RestApiGatewayDeploymentA:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      # see note above if you add something in here when you add a new endpoint
      - StatusMethod
    Properties:
      RestApiId: !Ref RestApiGateway

  RestApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref RestApiGateway
      StageName: prod
      # See note above RestApiGatewayDeployment, if a new endpoint is added, then this resource name will need updating
      DeploymentId: !Ref RestApiGatewayDeploymentA
      TracingEnabled: true
      AccessLogSetting:
        DestinationArn: !GetAtt RestApiGatewayResources.Outputs.ApiGwAccessLogsArn
        Format: '{ "requestTime": "$context.requestTime", "apiId": "$context.apiId", "accountId": "$context.accountId", "resourcePath": "$context.resourcePath", "stage": "$context.stage", "requestId": "$context.requestId", "extendedRequestId": "$context.extendedRequestId", "status": "$context.status", "httpMethod": "$context.httpMethod", "protocol": "$context.protocol", "path": "$context.path", "responseLatency": "$context.responseLatency", "responseLength": "$context.responseLength", "domainName": "$context.domainName", "identity": { "sourceIp": "$context.identity.sourceIp", "userAgent": "$context.identity.userAgent", "clientCert":{ "subjectDN": "$context.identity.clientCert.subjectDN", "issuerDN": "$context.identity.clientCert.issuerDN", "serialNumber": "$context.identity.clientCert.serialNumber", "validityNotBefore": "$context.identity.clientCert.validity.notBefore", "validityNotAfter": "$context.identity.clientCert.validity.notAfter" }}, "integration":{ "error": "$context.integration.error", "integrationStatus": "$context.integration.integrationStatus", "latency": "$context.integration.latency", "requestId": "$context.integration.requestId", "status": "$context.integration.status" }}'

  RestApiGatewayResources:
    Type: AWS::Serverless::Application
    Properties:
      Location: api_resources.yaml
      Parameters:
        AdditionalPolicies: !Join
          - ","
          - - Fn::ImportValue: !Sub ${StackName}:functions:${StatusFunctionName}:ExecuteLambdaPolicyArn
        ApiName: !Sub ${StackName}-apigw
        LogRetentionInDays: !Ref LogRetentionInDays
        EnableSplunk: !Ref EnableSplunk
