repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-merge-conflict
        name: Check for merge conflict strings

      - id: end-of-file-fixer
        name: Fix missing newline at the end of files

      - id: check-shebang-scripts-are-executable
        name: Check shell scripts are executable
        files: \.(sh)$

      - id: check-yaml
        name: Check pipelines configuration
        files: ^(.github)

  - repo: https://github.com/pycqa/flake8
    rev: "7ef0350a439c93166bc8ba89fcc3de6a9a664e6c" # release 6.1.0
    hooks:
      - id: flake8

  - repo: local
    hooks:
      - id: lint-cdk
        name: Lint cdk
        entry: npm
        args: ["run", "--prefix=packages/cdk", "lint"]
        language: system
        files: ^packages\/cdk
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-cpt-ui
        name: Lint cpt-ui
        entry: npm
        args: ["run", "--prefix=packages/cpt-ui", "lint"]
        language: system
        files: ^packages\/cpt-ui
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-cognito
        name: Lint cognito
        entry: npm
        args: ["run", "--prefix=packages/cognito", "lint"]
        language: system
        files: ^packages\/cognito
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-pdsClient
        name: Lint pdsClient
        entry: npm
        args: ["run", "--prefix=packages/common/pdsClient", "lint"]
        language: system
        files: ^packages\/common\/pdsClient
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-middyErrorHandler
        name: Lint middyErrorHandler
        entry: npm
        args: ["run", "--prefix=packages/common/middyErrorHandler", "lint"]
        language: system
        files: ^packages\/common\/middyErrorHandler
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-commonTypes
        name: Lint commonTypes
        entry: npm
        args: ["run", "--prefix=packages/common/commonTypes", "lint"]
        language: system
        files: ^packages\/common\/commonTypes
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-lambdaUtils
        name: Lint lambdaUtils
        entry: npm
        args: ["run", "--prefix=packages/common/lambdaUtils", "lint"]
        language: system
        files: ^packages\/common\/lambdaUtils
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-common-testing
        name: Lint common-testing
        entry: npm
        args: ["run", "--prefix=packages/common/testing", "lint"]
        language: system
        files: ^packages\/common\/testing
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-prescriptionListLambda
        name: Lint prescriptionListLambda
        entry: npm
        args: ["run", "--prefix=packages/prescriptionListLambda", "lint"]
        language: system
        files: ^packages\/prescriptionListLambda
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-patientSearchLambda
        name: Lint patientSearchLambda
        entry: npm
        args: ["run", "--prefix=packages/patientSearchLambda", "lint"]
        language: system
        files: ^packages\/patientSearchLambda
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false


      - id: lint-trackerUserInfoLambda
        name: Lint trackerUserInfoLambda
        entry: npm
        args: ["run", "--prefix=packages/trackerUserInfoLambda", "lint"]
        language: system
        files: ^packages\/trackerUserInfoLambda
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-sessionManagementLambda
        name: Lint sessionManagementLambda
        entry: npm
        args: ["run", "--prefix=packages/sessionManagementLambda", "lint"]
        language: system
        files: ^packages\/sessionManagementLambda
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-CIS2SignOutLambda
        name: Lint CIS2SignOutLambda
        entry: npm
        args: ["run", "--prefix=packages/CIS2SignOutLambda", "lint"]
        language: system
        files: ^packages\/CIS2SignOutLambda
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-selectedRoleLambda
        name: Lint selectedRoleLambda
        entry: npm
        args: ["run", "--prefix=packages/selectedRoleLambda", "lint"]
        language: system
        files: ^packages\/selectedRoleLambda
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-authFunctions
        name: Lint authFunctions
        entry: npm
        args: ["run", "--prefix=packages/common/authFunctions", "lint"]
        language: system
        files: ^packages\/common\/authFunctions
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-doHSClient
        name: Lint doHSClient
        entry: npm
        args: ["run", "--prefix=packages/common/doHSClient", "lint"]
        language: system
        files: ^packages\/common\/doHSClient
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false
        
      - id: lint-dynamoFunctions
        name: Lint dynamoFunctions
        entry: npm
        args: ["run", "--prefix=packages/common/dynamoFunctions", "lint"]
        language: system
        files: ^packages\/common\/dynamoFunctions
        types_or: [ts, tsx, javascript, jsx, json]
        pass_filenames: false

      - id: lint-githubactions
        name: Lint github actions
        entry: make
        args: ["lint-githubactions"]
        language: system
        files: ^.github
        types_or: [yaml]
        pass_filenames: false

      - id: lint-githubaction-scripts
        name: Lint github action scripts
        entry: make
        args: ["lint-githubaction-scripts"]
        language: system
        files: ^.github/scripts
        types_or: [sh, shell]
        pass_filenames: false

      - id: git-secrets
        name: Git Secrets
        description: git-secrets scans commits, commit messages, and --no-ff merges to prevent adding secrets into your git repositories.
        entry: bash
        args:
          - -c
          - 'docker run -v "$LOCAL_WORKSPACE_FOLDER:/src" git-secrets --pre_commit_hook'
        language: system

fail_fast: true
default_stages: [pre-commit]
